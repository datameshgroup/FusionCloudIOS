//
//  QRController.swift
//  FusionCloudIOS_Example
//
//  Created by Vanessa on 12/9/2023.
//  Copyright Â© 2023 CocoaPods. All rights reserved.
//

import Foundation
import UIKit
import FusionCloudIOS
import CoreImage.CIFilterBuiltins
let context = CIContext()
let filter = CIFilter.qrCodeGenerator()

class QRController: UIViewController{
    
    @IBOutlet weak var imageQRCode: UIImageView!
    @IBOutlet weak var btnNext: UIButton!
    @IBOutlet weak var txtPairingInstructions: UITextView!
    @IBOutlet weak var btnManual: UIButton!
    @IBOutlet weak var btnCancel: UIButton!
    
    var s:String = "859cf67c-0bdb-4703-a429-367cb1e14712" //SaleID, unique to the POS instance. Autogenerated this once.
    var p:String = "" //PairingPOIID
    var k:String = "1c1be5f2-9e6b-4c2a-a58e-b7b3a8149c71" //KEK. Autogenerated this once. POS can generate a new KEK for a pairing, however it should be noted that this will impact all terminals paired to the SaleID.
    
    override func viewDidLoad() {
        super.viewDidLoad()
        overrideUserInterfaceStyle = .light

        generateQRCode()
    }
    
    func generateQRCode() {
        print("Generating QR Code...")
        
        p = UUID().uuidString //PairingPOIID
        let c = "98cf9dfc-0db7-4a92-8b8cb66d4d2d7169" //CertificationCode
        let n = "IOS Demo App v1.0A" //POS display name with at most 30 characters.
        
        let newPairingData = fusionClient.createPairingData(
                                       saleID: s,
                                       pairingPOIID: p,
                                       kek: k,
                                       posName: n,
                                       certificationCode: c)
        print(newPairingData?.toJSONString()! ?? "default value")
        let qrCodeValue = genQRCode(from: newPairingData?.toJSONString()! ?? "default value")
        //TODO Check if qrCodeValue is valid

        imageQRCode.image = qrCodeValue
        imageQRCode.layer.magnificationFilter = kCAFilterNearest

        
        
    }
    
    func genQRCode(from input: String) -> UIImage? {

        let data = Data(input.utf8)
        filter.setValue(data, forKey: "inputMessage")
        if let qrCodeImage = filter.outputImage {
            if let qrCodeCGImage = context.createCGImage(qrCodeImage, from: qrCodeImage.extent) {
                return UIImage(cgImage: qrCodeCGImage)
            }
        }
        return UIImage(systemName: "xmark") ?? UIImage()
    }
    
    
    func doLogin(){
        let loginRequest = LoginRequest()
        loginRequest.dateTime = Date()
        loginRequest.operatorLanguage = "en"
        
        
        fusionClient.sendMessage(requestBody: loginRequest, type: "LoginRequest")
    }
    
    @IBAction func btnNext(_ sender: Any) {
        
        //TODO login here
        
        self.dismiss(animated: true, completion: nil)
    }
    
    @IBAction func btnCancel(_ sender: Any) {
        self.dismiss(animated: true, completion: nil)
    }
    
    @IBAction func btnManual(_ sender: Any) {
        let vc = storyboard!.instantiateViewController(withIdentifier: "ManualSettingStoryboard")
        DispatchQueue.main.async { [weak self] in
            self?.present(vc, animated: true, completion: nil)
        }
    }
    
}
